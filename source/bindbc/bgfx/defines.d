module bindbc.bgfx.defines;

import bindbc.bgfx.types;

import core.stdc.stdint : UINT8_C, UINT16_C, UINT32_C, UINT64_C;

extern(C) @nogc nothrow:

enum uint32_t BGFX_API_VERSION = UINT32_C(100);

enum uint64_t BGFX_STATE_WRITE_R = UINT64_C(0x0000000000000001);
enum uint64_t BGFX_STATE_WRITE_G = UINT64_C(0x0000000000000002);
enum uint64_t BGFX_STATE_WRITE_B = UINT64_C(0x0000000000000004);
enum uint64_t BGFX_STATE_WRITE_A = UINT64_C(0x0000000000000008);
enum uint64_t BGFX_STATE_WRITE_Z = UINT64_C(0x0000004000000000);
enum uint64_t BGFX_STATE_WRITE_RGB = (0| BGFX_STATE_WRITE_R | BGFX_STATE_WRITE_G | BGFX_STATE_WRITE_B);
enum uint64_t BGFX_STATE_WRITE_MASK = (0 | BGFX_STATE_WRITE_RGB | BGFX_STATE_WRITE_A | BGFX_STATE_WRITE_Z);

enum uint64_t BGFX_STATE_DEPTH_TEST_LESS = UINT64_C(0x0000000000000010);
enum uint64_t BGFX_STATE_DEPTH_TEST_LEQUAL = UINT64_C(0x0000000000000020);
enum uint64_t BGFX_STATE_DEPTH_TEST_EQUAL = UINT64_C(0x0000000000000030);
enum uint64_t BGFX_STATE_DEPTH_TEST_GEQUAL = UINT64_C(0x0000000000000040);
enum uint64_t BGFX_STATE_DEPTH_TEST_GREATER = UINT64_C(0x0000000000000050);
enum uint64_t BGFX_STATE_DEPTH_TEST_NOTEQUAL = UINT64_C(0x0000000000000060);
enum uint64_t BGFX_STATE_DEPTH_TEST_NEVER = UINT64_C(0x0000000000000070);
enum uint64_t BGFX_STATE_DEPTH_TEST_ALWAYS = UINT64_C(0x0000000000000080);
enum uint64_t BGFX_STATE_DEPTH_TEST_SHIFT = 4;
enum uint64_t BGFX_STATE_DEPTH_TEST_MASK = UINT64_C(0x00000000000000f0);

enum uint64_t BGFX_STATE_BLEND_ZERO = UINT64_C(0x0000000000001000);
enum uint64_t BGFX_STATE_BLEND_ONE = UINT64_C(0x0000000000002000);
enum uint64_t BGFX_STATE_BLEND_SRC_COLOR = UINT64_C(0x0000000000003000);
enum uint64_t BGFX_STATE_BLEND_INV_SRC_COLOR = UINT64_C(0x0000000000004000);
enum uint64_t BGFX_STATE_BLEND_SRC_ALPHA = UINT64_C(0x0000000000005000);
enum uint64_t BGFX_STATE_BLEND_INV_SRC_ALPHA = UINT64_C(0x0000000000006000);
enum uint64_t BGFX_STATE_BLEND_DST_ALPHA = UINT64_C(0x0000000000007000);
enum uint64_t BGFX_STATE_BLEND_INV_DST_ALPHA = UINT64_C(0x0000000000008000);
enum uint64_t BGFX_STATE_BLEND_DST_COLOR = UINT64_C(0x0000000000009000);
enum uint64_t BGFX_STATE_BLEND_INV_DST_COLOR = UINT64_C(0x000000000000a000);
enum uint64_t BGFX_STATE_BLEND_SRC_ALPHA_SAT = UINT64_C(0x000000000000b000);
enum uint64_t BGFX_STATE_BLEND_FACTOR = UINT64_C(0x000000000000c000);
enum uint64_t BGFX_STATE_BLEND_INV_FACTOR = UINT64_C(0x000000000000d000);
enum uint64_t BGFX_STATE_BLEND_SHIFT = 12;
enum uint64_t BGFX_STATE_BLEND_MASK = UINT64_C(0x000000000ffff000);

enum uint64_t BGFX_STATE_BLEND_EQUATION_ADD = UINT64_C(0x0000000000000000);
enum uint64_t BGFX_STATE_BLEND_EQUATION_SUB = UINT64_C(0x0000000010000000);
enum uint64_t BGFX_STATE_BLEND_EQUATION_REVSUB = UINT64_C(0x0000000020000000);
enum uint64_t BGFX_STATE_BLEND_EQUATION_MIN = UINT64_C(0x0000000030000000);
enum uint64_t BGFX_STATE_BLEND_EQUATION_MAX = UINT64_C(0x0000000040000000);
enum uint64_t BGFX_STATE_BLEND_EQUATION_SHIFT = 28;
enum uint64_t BGFX_STATE_BLEND_EQUATION_MASK = UINT64_C(0x00000003f0000000);

enum uint64_t BGFX_STATE_CULL_CW = UINT64_C(0x0000001000000000);
enum uint64_t BGFX_STATE_CULL_CCW = UINT64_C(0x0000002000000000);
enum uint64_t BGFX_STATE_CULL_SHIFT = 36;
enum uint64_t BGFX_STATE_CULL_MASK = UINT64_C(0x0000003000000000);

enum uint64_t BGFX_STATE_ALPHA_REF_SHIFT = 40;
enum uint64_t BGFX_STATE_ALPHA_REF_MASK = UINT64_C(0x0000ff0000000000);
uint64_t BGFX_STATE_ALPHA_REF(uint64_t v)
{
	return (cast(uint64_t)(v)<<BGFX_STATE_ALPHA_REF_SHIFT)&BGFX_STATE_ALPHA_REF_MASK;
}

enum uint64_t BGFX_STATE_PT_TRISTRIP = UINT64_C(0x0001000000000000);
enum uint64_t BGFX_STATE_PT_LINES = UINT64_C(0x0002000000000000);
enum uint64_t BGFX_STATE_PT_LINESTRIP = UINT64_C(0x0003000000000000);
enum uint64_t BGFX_STATE_PT_POINTS = UINT64_C(0x0004000000000000);
enum uint64_t BGFX_STATE_PT_SHIFT = 48;
enum uint64_t BGFX_STATE_PT_MASK = UINT64_C(0x0007000000000000);

enum uint64_t BGFX_STATE_POINT_SIZE_SHIFT = 52;
enum uint64_t BGFX_STATE_POINT_SIZE_MASK = UINT64_C(0x00f0000000000000);
uint64_t BGFX_STATE_POINT_SIZE(uint64_t v)
{
	return (cast(uint64_t)(v)<<BGFX_STATE_POINT_SIZE_SHIFT)&BGFX_STATE_POINT_SIZE_MASK;
}

enum uint64_t BGFX_STATE_MSAA = UINT64_C(0x0100000000000000);
enum uint64_t BGFX_STATE_LINEAA = UINT64_C(0x0200000000000000);
enum uint64_t BGFX_STATE_CONSERVATIVE_RASTER = UINT64_C(0x0400000000000000);
enum uint64_t BGFX_STATE_NONE = UINT64_C(0x0000000000000000);
enum uint64_t BGFX_STATE_BLEND_INDEPENDENT = UINT64_C(0x0000000400000000);
enum uint64_t BGFX_STATE_BLEND_ALPHA_TO_COVERAGE =  UINT64_C(0x0000000800000000);
enum uint64_t BGFX_STATE_DEFAULT = (0 | BGFX_STATE_WRITE_RGB | BGFX_STATE_WRITE_A | BGFX_STATE_WRITE_Z | BGFX_STATE_DEPTH_TEST_LESS | BGFX_STATE_CULL_CW | BGFX_STATE_MSAA);
enum uint64_t BGFX_STATE_MASK = UINT64_C(0xffffffffffffffff);
enum uint64_t BGFX_STATE_RESERVED_SHIFT = 61;
enum uint64_t BGFX_STATE_RESERVED_MASK = UINT64_C(0xe000000000000000);

enum uint32_t BGFX_STENCIL_FUNC_REF_SHIFT = 0;
enum uint32_t BGFX_STENCIL_FUNC_REF_MASK = UINT32_C(0x000000ff);
uint32_t BGFX_STENCIL_FUNC_REF(uint32_t v)
{
	return (cast(uint32_t)(v)<<BGFX_STENCIL_FUNC_REF_SHIFT)&BGFX_STENCIL_FUNC_REF_MASK;
}

enum uint32_t BGFX_STENCIL_FUNC_RMASK_SHIFT = 8;
enum uint32_t BGFX_STENCIL_FUNC_RMASK_MASK = UINT32_C(0x0000ff00);
uint32_t BGFX_STENCIL_FUNC_RMASK(uint32_t v)
{
	return (cast(uint32_t)(v)<<BGFX_STENCIL_FUNC_RMASK_SHIFT)&BGFX_STENCIL_FUNC_RMASK_MASK;
}

enum uint32_t BGFX_STENCIL_NONE = UINT32_C(0x00000000);
enum uint32_t BGFX_STENCIL_MASK = UINT32_C(0xffffffff);
enum uint32_t BGFX_STENCIL_DEFAULT = UINT32_C(0x00000000);

enum uint32_t BGFX_STENCIL_TEST_LESS = UINT32_C(0x00010000);
enum uint32_t BGFX_STENCIL_TEST_LEQUAL = UINT32_C(0x00020000);
enum uint32_t BGFX_STENCIL_TEST_EQUAL = UINT32_C(0x00030000);
enum uint32_t BGFX_STENCIL_TEST_GEQUAL = UINT32_C(0x00040000);
enum uint32_t BGFX_STENCIL_TEST_GREATER = UINT32_C(0x00050000);
enum uint32_t BGFX_STENCIL_TEST_NOTEQUAL = UINT32_C(0x00060000);
enum uint32_t BGFX_STENCIL_TEST_NEVER = UINT32_C(0x00070000);
enum uint32_t BGFX_STENCIL_TEST_ALWAYS = UINT32_C(0x00080000);
enum uint32_t BGFX_STENCIL_TEST_SHIFT = 16;
enum uint32_t BGFX_STENCIL_TEST_MASK = UINT32_C(0x000f0000);

enum uint32_t BGFX_STENCIL_OP_FAIL_S_ZERO = UINT32_C(0x00000000);
enum uint32_t BGFX_STENCIL_OP_FAIL_S_KEEP = UINT32_C(0x00100000);
enum uint32_t BGFX_STENCIL_OP_FAIL_S_REPLACE = UINT32_C(0x00200000);
enum uint32_t BGFX_STENCIL_OP_FAIL_S_INCR = UINT32_C(0x00300000);
enum uint32_t BGFX_STENCIL_OP_FAIL_S_INCRSAT = UINT32_C(0x00400000);
enum uint32_t BGFX_STENCIL_OP_FAIL_S_DECR = UINT32_C(0x00500000);
enum uint32_t BGFX_STENCIL_OP_FAIL_S_DECRSAT = UINT32_C(0x00600000);
enum uint32_t BGFX_STENCIL_OP_FAIL_S_INVERT = UINT32_C(0x00700000);
enum uint32_t BGFX_STENCIL_OP_FAIL_S_SHIFT = 20;
enum uint32_t BGFX_STENCIL_OP_FAIL_S_MASK = UINT32_C(0x00f00000);

enum uint32_t BGFX_STENCIL_OP_FAIL_Z_ZERO = UINT32_C(0x00000000);
enum uint32_t BGFX_STENCIL_OP_FAIL_Z_KEEP = UINT32_C(0x01000000);
enum uint32_t BGFX_STENCIL_OP_FAIL_Z_REPLACE = UINT32_C(0x02000000);
enum uint32_t BGFX_STENCIL_OP_FAIL_Z_INCR = UINT32_C(0x03000000);
enum uint32_t BGFX_STENCIL_OP_FAIL_Z_INCRSAT = UINT32_C(0x04000000);
enum uint32_t BGFX_STENCIL_OP_FAIL_Z_DECR = UINT32_C(0x05000000);
enum uint32_t BGFX_STENCIL_OP_FAIL_Z_DECRSAT = UINT32_C(0x06000000);
enum uint32_t BGFX_STENCIL_OP_FAIL_Z_INVERT = UINT32_C(0x07000000);
enum uint32_t BGFX_STENCIL_OP_FAIL_Z_SHIFT = 24;
enum uint32_t BGFX_STENCIL_OP_FAIL_Z_MASK = UINT32_C(0x0f000000);

enum uint32_t BGFX_STENCIL_OP_PASS_Z_ZERO = UINT32_C(0x00000000);
enum uint32_t BGFX_STENCIL_OP_PASS_Z_KEEP = UINT32_C(0x10000000);
enum uint32_t BGFX_STENCIL_OP_PASS_Z_REPLACE = UINT32_C(0x20000000);
enum uint32_t BGFX_STENCIL_OP_PASS_Z_INCR = UINT32_C(0x30000000);
enum uint32_t BGFX_STENCIL_OP_PASS_Z_INCRSAT = UINT32_C(0x40000000);
enum uint32_t BGFX_STENCIL_OP_PASS_Z_DECR = UINT32_C(0x50000000);
enum uint32_t BGFX_STENCIL_OP_PASS_Z_DECRSAT = UINT32_C(0x60000000);
enum uint32_t BGFX_STENCIL_OP_PASS_Z_INVERT = UINT32_C(0x70000000);
enum uint32_t BGFX_STENCIL_OP_PASS_Z_SHIFT = 28;
enum uint32_t BGFX_STENCIL_OP_PASS_Z_MASK = UINT32_C(0xf0000000);

enum uint16_t BGFX_CLEAR_NONE = UINT16_C(0x0000);
enum uint16_t BGFX_CLEAR_COLOR = UINT16_C(0x0001);
enum uint16_t BGFX_CLEAR_DEPTH = UINT16_C(0x0002);
enum uint16_t BGFX_CLEAR_STENCIL = UINT16_C(0x0004);
enum uint16_t BGFX_CLEAR_DISCARD_COLOR_0 = UINT16_C(0x0008);
enum uint16_t BGFX_CLEAR_DISCARD_COLOR_1 = UINT16_C(0x0010);
enum uint16_t BGFX_CLEAR_DISCARD_COLOR_2 = UINT16_C(0x0020);
enum uint16_t BGFX_CLEAR_DISCARD_COLOR_3 = UINT16_C(0x0040);
enum uint16_t BGFX_CLEAR_DISCARD_COLOR_4 = UINT16_C(0x0080);
enum uint16_t BGFX_CLEAR_DISCARD_COLOR_5 = UINT16_C(0x0100);
enum uint16_t BGFX_CLEAR_DISCARD_COLOR_6 = UINT16_C(0x0200);
enum uint16_t BGFX_CLEAR_DISCARD_COLOR_7 = UINT16_C(0x0400);
enum uint16_t BGFX_CLEAR_DISCARD_DEPTH = UINT16_C(0x0800);
enum uint16_t BGFX_CLEAR_DISCARD_STENCIL = UINT16_C(0x1000);
enum uint16_t BGFX_CLEAR_DISCARD_COLOR_MASK = (0 | BGFX_CLEAR_DISCARD_COLOR_0 | BGFX_CLEAR_DISCARD_COLOR_1 | BGFX_CLEAR_DISCARD_COLOR_2 | BGFX_CLEAR_DISCARD_COLOR_3 | BGFX_CLEAR_DISCARD_COLOR_4 | BGFX_CLEAR_DISCARD_COLOR_5 | BGFX_CLEAR_DISCARD_COLOR_6 | BGFX_CLEAR_DISCARD_COLOR_7);
enum uint16_t BGFX_CLEAR_DISCARD_MASK = (0 | BGFX_CLEAR_DISCARD_COLOR_MASK | BGFX_CLEAR_DISCARD_DEPTH | BGFX_CLEAR_DISCARD_STENCIL);

enum uint32_t BGFX_DEBUG_NONE = UINT32_C(0x00000000);
enum uint32_t BGFX_DEBUG_WIREFRAME = UINT32_C(0x00000001);
enum uint32_t BGFX_DEBUG_IFH = UINT32_C(0x00000002);
enum uint32_t BGFX_DEBUG_STATS = UINT32_C(0x00000004);
enum uint32_t BGFX_DEBUG_TEXT = UINT32_C(0x00000008);
enum uint32_t BGFX_DEBUG_PROFILER = UINT32_C(0x00000010);

enum uint16_t BGFX_BUFFER_COMPUTE_FORMAT_8X1 = UINT16_C(0x0001);
enum uint16_t BGFX_BUFFER_COMPUTE_FORMAT_8X2 = UINT16_C(0x0002);
enum uint16_t BGFX_BUFFER_COMPUTE_FORMAT_8X4 = UINT16_C(0x0003);
enum uint16_t BGFX_BUFFER_COMPUTE_FORMAT_16X1 = UINT16_C(0x0004);
enum uint16_t BGFX_BUFFER_COMPUTE_FORMAT_16X2 = UINT16_C(0x0005);
enum uint16_t BGFX_BUFFER_COMPUTE_FORMAT_16X4 = UINT16_C(0x0006);
enum uint16_t BGFX_BUFFER_COMPUTE_FORMAT_32X1 = UINT16_C(0x0007);
enum uint16_t BGFX_BUFFER_COMPUTE_FORMAT_32X2 = UINT16_C(0x0008);
enum uint16_t BGFX_BUFFER_COMPUTE_FORMAT_32X4 = UINT16_C(0x0009);
enum uint16_t BGFX_BUFFER_COMPUTE_FORMAT_SHIFT = 0;
enum uint16_t BGFX_BUFFER_COMPUTE_FORMAT_MASK = UINT16_C(0x000f);
enum uint16_t BGFX_BUFFER_COMPUTE_TYPE_INT = UINT16_C(0x0010);
enum uint16_t BGFX_BUFFER_COMPUTE_TYPE_UINT = UINT16_C(0x0020);
enum uint16_t BGFX_BUFFER_COMPUTE_TYPE_FLOAT = UINT16_C(0x0030);
enum uint16_t BGFX_BUFFER_COMPUTE_TYPE_SHIFT = 4;
enum uint16_t BGFX_BUFFER_COMPUTE_TYPE_MASK = UINT16_C(0x0030);

enum uint16_t BGFX_BUFFER_NONE = UINT16_C(0x0000);
enum uint16_t BGFX_BUFFER_COMPUTE_READ = UINT16_C(0x0100);
enum uint16_t BGFX_BUFFER_COMPUTE_WRITE = UINT16_C(0x0200);
enum uint16_t BGFX_BUFFER_DRAW_INDIRECT = UINT16_C(0x0400);
enum uint16_t BGFX_BUFFER_ALLOW_RESIZE = UINT16_C(0x0800);
enum uint16_t BGFX_BUFFER_INDEX32 = UINT16_C(0x1000);
enum uint16_t BGFX_BUFFER_COMPUTE_READ_WRITE = (0 | BGFX_BUFFER_COMPUTE_READ | BGFX_BUFFER_COMPUTE_WRITE);

enum uint64_t BGFX_TEXTURE_NONE = UINT64_C(0x0000000000000000);
enum uint64_t BGFX_TEXTURE_MSAA_SAMPLE = UINT64_C(0x0000000800000000);
enum uint64_t BGFX_TEXTURE_RT = UINT64_C(0x0000001000000000);
enum uint64_t BGFX_TEXTURE_COMPUTE_WRITE = UINT64_C(0x0000100000000000);
enum uint64_t BGFX_TEXTURE_SRGB = UINT64_C(0x0000200000000000);
enum uint64_t BGFX_TEXTURE_BLIT_DST = UINT64_C(0x0000400000000000);
enum uint64_t BGFX_TEXTURE_READ_BACK = UINT64_C(0x0000800000000000);
enum uint64_t BGFX_TEXTURE_RT_MSAA_X2 = UINT64_C(0x0000002000000000);
enum uint64_t BGFX_TEXTURE_RT_MSAA_X4 = UINT64_C(0x0000003000000000);
enum uint64_t BGFX_TEXTURE_RT_MSAA_X8 = UINT64_C(0x0000004000000000);
enum uint64_t BGFX_TEXTURE_RT_MSAA_X16 = UINT64_C(0x0000005000000000);
enum uint64_t BGFX_TEXTURE_RT_MSAA_SHIFT = 36;
enum uint64_t BGFX_TEXTURE_RT_MSAA_MASK = UINT64_C(0x0000007000000000);
enum uint64_t BGFX_TEXTURE_RT_WRITE_ONLY = UINT64_C(0x0000008000000000);
enum uint64_t BGFX_TEXTURE_RT_SHIFT = 36;
enum uint64_t BGFX_TEXTURE_RT_MASK = UINT64_C(0x000000f000000000);

enum uint32_t BGFX_SAMPLER_U_MIRROR = UINT32_C(0x00000001);
enum uint32_t BGFX_SAMPLER_U_CLAMP = UINT32_C(0x00000002);
enum uint32_t BGFX_SAMPLER_U_BORDER = UINT32_C(0x00000003);
enum uint32_t BGFX_SAMPLER_U_SHIFT = 0;
enum uint32_t BGFX_SAMPLER_U_MASK = UINT32_C(0x00000003);

enum uint32_t BGFX_SAMPLER_V_MIRROR = UINT32_C(0x00000004);
enum uint32_t BGFX_SAMPLER_V_CLAMP = UINT32_C(0x00000008);
enum uint32_t BGFX_SAMPLER_V_BORDER = UINT32_C(0x0000000c);
enum uint32_t BGFX_SAMPLER_V_SHIFT = 2;
enum uint32_t BGFX_SAMPLER_V_MASK = UINT32_C(0x0000000c);

enum uint32_t BGFX_SAMPLER_W_MIRROR = UINT32_C(0x00000010);
enum uint32_t BGFX_SAMPLER_W_CLAMP = UINT32_C(0x00000020);
enum uint32_t BGFX_SAMPLER_W_BORDER = UINT32_C(0x00000030);
enum uint32_t BGFX_SAMPLER_W_SHIFT = 4;
enum uint32_t BGFX_SAMPLER_W_MASK = UINT32_C(0x00000030);

enum uint32_t BGFX_SAMPLER_MIN_POINT = UINT32_C(0x00000040);
enum uint32_t BGFX_SAMPLER_MIN_ANISOTROPIC = UINT32_C(0x00000080);
enum uint32_t BGFX_SAMPLER_MIN_SHIFT = 6;
enum uint32_t BGFX_SAMPLER_MIN_MASK = UINT32_C(0x000000c0);

enum uint32_t BGFX_SAMPLER_MAG_POINT = UINT32_C(0x00000100);
enum uint32_t BGFX_SAMPLER_MAG_ANISOTROPIC = UINT32_C(0x00000200);
enum uint32_t BGFX_SAMPLER_MAG_SHIFT = 8;
enum uint32_t BGFX_SAMPLER_MAG_MASK = UINT32_C(0x00000300);

enum uint32_t BGFX_SAMPLER_MIP_POINT = UINT32_C(0x00000400);
enum uint32_t BGFX_SAMPLER_MIP_SHIFT = 10;
enum uint32_t BGFX_SAMPLER_MIP_MASK = UINT32_C(0x00000400);

enum uint32_t BGFX_SAMPLER_COMPARE_LESS = UINT32_C(0x00010000);
enum uint32_t BGFX_SAMPLER_COMPARE_LEQUAL = UINT32_C(0x00020000);
enum uint32_t BGFX_SAMPLER_COMPARE_EQUAL = UINT32_C(0x00030000);
enum uint32_t BGFX_SAMPLER_COMPARE_GEQUAL = UINT32_C(0x00040000);
enum uint32_t BGFX_SAMPLER_COMPARE_GREATER = UINT32_C(0x00050000);
enum uint32_t BGFX_SAMPLER_COMPARE_NOTEQUAL = UINT32_C(0x00060000);
enum uint32_t BGFX_SAMPLER_COMPARE_NEVER = UINT32_C(0x00070000);
enum uint32_t BGFX_SAMPLER_COMPARE_ALWAYS = UINT32_C(0x00080000);
enum uint32_t BGFX_SAMPLER_COMPARE_SHIFT = 16;
enum uint32_t BGFX_SAMPLER_COMPARE_MASK = UINT32_C(0x000f0000);

enum uint32_t BGFX_SAMPLER_BORDER_COLOR_SHIFT = 24;
enum uint32_t BGFX_SAMPLER_BORDER_COLOR_MASK = UINT32_C(0x0f000000);
uint32_t BGFX_SAMPLER_BORDER_COLOR(uint32_t v)
{
	return (cast(uint32_t)(v)<<BGFX_SAMPLER_BORDER_COLOR_SHIFT)&BGFX_SAMPLER_BORDER_COLOR_MASK;
}

enum uint32_t BGFX_SAMPLER_RESERVED_SHIFT = 28;
enum uint32_t BGFX_SAMPLER_RESERVED_MASK = UINT32_C(0xf0000000);

enum uint32_t BGFX_SAMPLER_NONE = UINT32_C(0x00000000);
enum uint32_t BGFX_SAMPLER_SAMPLE_STENCIL = UINT32_C(0x00100000);
enum uint32_t BGFX_SAMPLER_POINT = (0 | BGFX_SAMPLER_MIN_POINT | BGFX_SAMPLER_MAG_POINT | BGFX_SAMPLER_MIP_POINT);
enum uint32_t BGFX_SAMPLER_UVW_MIRROR = (0 | BGFX_SAMPLER_U_MIRROR | BGFX_SAMPLER_V_MIRROR | BGFX_SAMPLER_W_MIRROR);
enum uint32_t BGFX_SAMPLER_UVW_CLAMP = (0 | BGFX_SAMPLER_U_CLAMP | BGFX_SAMPLER_V_CLAMP | BGFX_SAMPLER_W_CLAMP);
enum uint32_t BGFX_SAMPLER_UVW_BORDER = (0 | BGFX_SAMPLER_U_BORDER | BGFX_SAMPLER_V_BORDER | BGFX_SAMPLER_W_BORDER);
enum uint32_t BGFX_SAMPLER_BITS_MASK = (0 | BGFX_SAMPLER_U_MASK | BGFX_SAMPLER_V_MASK | BGFX_SAMPLER_W_MASK | BGFX_SAMPLER_MIN_MASK | BGFX_SAMPLER_MAG_MASK | BGFX_SAMPLER_MIP_MASK | BGFX_SAMPLER_COMPARE_MASK);

enum uint32_t BGFX_RESET_MSAA_X2 = UINT32_C(0x00000010);
enum uint32_t BGFX_RESET_MSAA_X4 = UINT32_C(0x00000020);
enum uint32_t BGFX_RESET_MSAA_X8 = UINT32_C(0x00000030);
enum uint32_t BGFX_RESET_MSAA_X16 = UINT32_C(0x00000040);
enum uint32_t BGFX_RESET_MSAA_SHIFT = 4;
enum uint32_t BGFX_RESET_MSAA_MASK = UINT32_C(0x00000070);

enum uint32_t BGFX_RESET_NONE = UINT32_C(0x00000000);
enum uint32_t BGFX_RESET_FULLSCREEN = UINT32_C(0x00000001);
enum uint32_t BGFX_RESET_VSYNC = UINT32_C(0x00000080);
enum uint32_t BGFX_RESET_MAXANISOTROPY = UINT32_C(0x00000100);
enum uint32_t BGFX_RESET_CAPTURE = UINT32_C(0x00000200);
enum uint32_t BGFX_RESET_FLUSH_AFTER_RENDER = UINT32_C(0x00002000);
enum uint32_t BGFX_RESET_FLIP_AFTER_RENDER = UINT32_C(0x00004000);
enum uint32_t BGFX_RESET_SRGB_BACKBUFFER = UINT32_C(0x00008000);
enum uint32_t BGFX_RESET_HDR10 = UINT32_C(0x00010000);
enum uint32_t BGFX_RESET_HIDPI = UINT32_C(0x00020000);
enum uint32_t BGFX_RESET_DEPTH_CLAMP = UINT32_C(0x00040000);
enum uint32_t BGFX_RESET_SUSPEND = UINT32_C(0x00080000);
enum uint32_t BGFX_RESET_FULLSCREEN_SHIFT = 0;
enum uint32_t BGFX_RESET_FULLSCREEN_MASK = UINT32_C(0x00000001);
enum uint32_t BGFX_RESET_RESERVED_SHIFT = 31;
enum uint32_t BGFX_RESET_RESERVED_MASK = UINT32_C(0x80000000);

enum uint64_t BGFX_CAPS_ALPHA_TO_COVERAGE = UINT64_C(0x0000000000000001);
enum uint64_t BGFX_CAPS_BLEND_INDEPENDENT = UINT64_C(0x0000000000000002);
enum uint64_t BGFX_CAPS_COMPUTE = UINT64_C(0x0000000000000004);
enum uint64_t BGFX_CAPS_CONSERVATIVE_RASTER = UINT64_C(0x0000000000000008);
enum uint64_t BGFX_CAPS_DRAW_INDIRECT = UINT64_C(0x0000000000000010);
enum uint64_t BGFX_CAPS_FRAGMENT_DEPTH = UINT64_C(0x0000000000000020);
enum uint64_t BGFX_CAPS_FRAGMENT_ORDERING = UINT64_C(0x0000000000000040);
enum uint64_t BGFX_CAPS_FRAMEBUFFER_RW = UINT64_C(0x0000000000000080);
enum uint64_t BGFX_CAPS_GRAPHICS_DEBUGGER = UINT64_C(0x0000000000000100);
enum uint64_t BGFX_CAPS_RESERVED = UINT64_C(0x0000000000000200);
enum uint64_t BGFX_CAPS_HDR10 = UINT64_C(0x0000000000000400);
enum uint64_t BGFX_CAPS_HIDPI = UINT64_C(0x0000000000000800);
enum uint64_t BGFX_CAPS_INDEX32 = UINT64_C(0x0000000000001000);
enum uint64_t BGFX_CAPS_INSTANCING = UINT64_C(0x0000000000002000);
enum uint64_t BGFX_CAPS_OCCLUSION_QUERY = UINT64_C(0x0000000000004000);
enum uint64_t BGFX_CAPS_RENDERER_MULTITHREADED = UINT64_C(0x0000000000008000);
enum uint64_t BGFX_CAPS_SWAP_CHAIN = UINT64_C(0x0000000000010000);
enum uint64_t BGFX_CAPS_TEXTURE_2D_ARRAY = UINT64_C(0x0000000000020000);
enum uint64_t BGFX_CAPS_TEXTURE_3D = UINT64_C(0x0000000000040000);
enum uint64_t BGFX_CAPS_TEXTURE_BLIT = UINT64_C(0x0000000000080000);
enum uint64_t BGFX_CAPS_TEXTURE_COMPARE_RESERVED =  UINT64_C(0x0000000000100000);
enum uint64_t BGFX_CAPS_TEXTURE_COMPARE_LEQUAL = UINT64_C(0x0000000000200000);
enum uint64_t BGFX_CAPS_TEXTURE_CUBE_ARRAY = UINT64_C(0x0000000000400000);
enum uint64_t BGFX_CAPS_TEXTURE_DIRECT_ACCESS = UINT64_C(0x0000000000800000);
enum uint64_t BGFX_CAPS_TEXTURE_READ_BACK = UINT64_C(0x0000000001000000);
enum uint64_t BGFX_CAPS_VERTEX_ATTRIB_HALF = UINT64_C(0x0000000002000000);
enum uint64_t BGFX_CAPS_VERTEX_ATTRIB_UINT10 = UINT64_C(0x0000000004000000);
enum uint64_t BGFX_CAPS_VERTEX_ID = UINT64_C(0x0000000008000000);
enum uint64_t BGFX_CAPS_TEXTURE_COMPARE_ALL = (0 | BGFX_CAPS_TEXTURE_COMPARE_RESERVED | BGFX_CAPS_TEXTURE_COMPARE_LEQUAL);

enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_NONE = UINT16_C(0x0000);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_2D = UINT16_C(0x0001);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_2D_SRGB = UINT16_C(0x0002);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_2D_EMULATED = UINT16_C(0x0004);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_3D = UINT16_C(0x0008);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_3D_SRGB = UINT16_C(0x0010);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_3D_EMULATED = UINT16_C(0x0020);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_CUBE = UINT16_C(0x0040);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_CUBE_SRGB =  UINT16_C(0x0080);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_CUBE_EMULATED = UINT16_C(0x0100);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_VERTEX = UINT16_C(0x0200);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_IMAGE = UINT16_C(0x0400);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_FRAMEBUFFER = UINT16_C(0x0800);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_FRAMEBUFFER_MSAA = UINT16_C(0x1000);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_MSAA = UINT16_C(0x2000);
enum uint16_t BGFX_CAPS_FORMAT_TEXTURE_MIP_AUTOGEN = UINT16_C(0x4000);

enum uint8_t BGFX_RESOLVE_NONE = UINT8_C(0x00);
enum uint8_t BGFX_RESOLVE_AUTO_GEN_MIPS = UINT8_C(0x01);

enum uint16_t BGFX_PCI_ID_NONE = UINT16_C(0x0000);
enum uint16_t BGFX_PCI_ID_SOFTWARE_RASTERIZER = UINT16_C(0x0001);
enum uint16_t BGFX_PCI_ID_AMD = UINT16_C(0x1002);
enum uint16_t BGFX_PCI_ID_INTEL = UINT16_C(0x8086);
enum uint16_t BGFX_PCI_ID_NVIDIA = UINT16_C(0x10de);

enum uint8_t BGFX_CUBE_MAP_POSITIVE_X = UINT8_C(0x00);
enum uint8_t BGFX_CUBE_MAP_NEGATIVE_X = UINT8_C(0x01);
enum uint8_t BGFX_CUBE_MAP_POSITIVE_Y = UINT8_C(0x02);
enum uint8_t BGFX_CUBE_MAP_NEGATIVE_Y = UINT8_C(0x03);
enum uint8_t BGFX_CUBE_MAP_POSITIVE_Z = UINT8_C(0x04);
enum uint8_t BGFX_CUBE_MAP_NEGATIVE_Z = UINT8_C(0x05);

uint64_t BGFX_STATE_BLEND_FUNC_SEPARATE(uint64_t _srcRGB, uint64_t _dstRGB, uint64_t _srcA, uint64_t _dstA)
{
	return UINT64_C(0) | ((cast(uint64_t)(_srcRGB)|(cast(uint64_t)(_dstRGB)<<4))) | ((cast(uint64_t)(_srcA )|(cast(uint64_t)(_dstA )<<4))<<8);
}

uint64_t BGFX_STATE_BLEND_EQUATION_SEPARATE(uint64_t _equationRGB, uint64_t _equationA)
{
	return cast(uint64_t)(_equationRGB)|(cast(uint64_t)(_equationA)<<3);
}

uint64_t BGFX_STATE_BLEND_FUNC(uint64_t _src, uint64_t _dst)
{
	return BGFX_STATE_BLEND_FUNC_SEPARATE(_src, _dst, _src, _dst);
}

uint64_t BGFX_STATE_BLEND_EQUATION(uint64_t _equation)
{
	return BGFX_STATE_BLEND_EQUATION_SEPARATE(_equation, _equation);
}

enum uint64_t BGFX_STATE_BLEND_ADD = (0 | BGFX_STATE_BLEND_FUNC(BGFX_STATE_BLEND_ONE, BGFX_STATE_BLEND_ONE));
enum uint64_t BGFX_STATE_BLEND_ALPHA = (0 | BGFX_STATE_BLEND_FUNC(BGFX_STATE_BLEND_SRC_ALPHA, BGFX_STATE_BLEND_INV_SRC_ALPHA));
enum uint64_t BGFX_STATE_BLEND_DARKEN = (0 | BGFX_STATE_BLEND_FUNC(BGFX_STATE_BLEND_ONE, BGFX_STATE_BLEND_ONE) | BGFX_STATE_BLEND_EQUATION(BGFX_STATE_BLEND_EQUATION_MIN));
enum uint64_t BGFX_STATE_BLEND_LIGHTEN = (0 | BGFX_STATE_BLEND_FUNC(BGFX_STATE_BLEND_ONE, BGFX_STATE_BLEND_ONE) | BGFX_STATE_BLEND_EQUATION(BGFX_STATE_BLEND_EQUATION_MAX));
enum uint64_t BGFX_STATE_BLEND_MULTIPLY = (0 | BGFX_STATE_BLEND_FUNC(BGFX_STATE_BLEND_DST_COLOR, BGFX_STATE_BLEND_ZERO));
enum uint64_t BGFX_STATE_BLEND_NORMAL = (0 | BGFX_STATE_BLEND_FUNC(BGFX_STATE_BLEND_ONE, BGFX_STATE_BLEND_INV_SRC_ALPHA));
enum uint64_t BGFX_STATE_BLEND_SCREEN = (0 | BGFX_STATE_BLEND_FUNC(BGFX_STATE_BLEND_ONE, BGFX_STATE_BLEND_INV_SRC_COLOR));
enum uint64_t BGFX_STATE_BLEND_LINEAR_BURN = (0 | BGFX_STATE_BLEND_FUNC(BGFX_STATE_BLEND_DST_COLOR, BGFX_STATE_BLEND_INV_DST_COLOR) | BGFX_STATE_BLEND_EQUATION(BGFX_STATE_BLEND_EQUATION_SUB));

uint32_t BGFX_STATE_BLEND_FUNC_RT_x(uint32_t _src, uint32_t _dst)
{
	return 0 | (cast(uint32_t)((_src)>>BGFX_STATE_BLEND_SHIFT) | (cast(uint32_t)((_dst)>>BGFX_STATE_BLEND_SHIFT)<<4));
}

uint32_t BGFX_STATE_BLEND_FUNC_RT_xE(uint32_t _src, uint32_t _dst, uint32_t _equation)
{
	return 0 | BGFX_STATE_BLEND_FUNC_RT_x(_src, _dst) | (cast(uint32_t)((_equation)>>BGFX_STATE_BLEND_EQUATION_SHIFT)<<8);
}

uint32_t BGFX_STATE_BLEND_FUNC_RT_1(uint32_t _src, uint32_t _dst)
{
	return BGFX_STATE_BLEND_FUNC_RT_x(_src, _dst)<<0;
}
uint32_t BGFX_STATE_BLEND_FUNC_RT_2(uint32_t _src, uint32_t _dst)
{
	return BGFX_STATE_BLEND_FUNC_RT_x(_src, _dst)<<11;
}
uint32_t BGFX_STATE_BLEND_FUNC_RT_3(uint32_t _src, uint32_t _dst)
{
	return BGFX_STATE_BLEND_FUNC_RT_x(_src, _dst)<<22;
}

uint32_t BGFX_STATE_BLEND_FUNC_RT_1E(uint32_t _src, uint32_t _dst, uint32_t _equation)
{
	return BGFX_STATE_BLEND_FUNC_RT_xE(_src, _dst, _equation)<<0;
}
uint32_t BGFX_STATE_BLEND_FUNC_RT_2E(uint32_t _src, uint32_t _dst, uint32_t _equation)
{
	return BGFX_STATE_BLEND_FUNC_RT_xE(_src, _dst, _equation)<<11;
}
uint32_t BGFX_STATE_BLEND_FUNC_RT_3E(uint32_t _src, uint32_t _dst, uint32_t _equation)
{
	return BGFX_STATE_BLEND_FUNC_RT_xE(_src, _dst, _equation)<<22;
}
